#!/bin/bash

add_cron () {
	# $1 = path and filename of the ddns_reportip
	crontab -l >/tmp/ct.txt
	if grep "$1" /tmp/ct.txt >/dev/null; then
		echo "crontab already contains the ddns integration. Skipping."
	else
		echo "installing new record into crontab..."
		echo "*/30 *  * * *   $1" >>/tmp/ct.txt
		crontab /tmp/ct.txt
	fi
	rm /tmp/ct.txt
}

install_common () {
	python3 setup.py install

	if [ ! -f /etc/ddns/ddns.yaml ]; then
		mkdir /etc/ddns
		cp ddns.yaml /etc/ddns/
	fi
}

add_nm () {
	# $1 = path and filename of the ddns_reportip
	BF="$1"
	if [ -d /etc/NetworkManager/dispatcher.d/ ]; then
		sed "s!DDNS_REPORTIP_PY!${BF}!" 99dnsupdate.template >99dnsupdate
		chmod a+x 99dnsupdate
		cp 99dnsupdate /etc/NetworkManager/dispatcher.d/
	fi
}

clean () {
	rm -rf 99dnsupdate build/ ddns.egg-info/ dist/
}

deploy_debian () {
	clean
	apt-get update
	apt-get -y install python3-yaml python3-setuptools dnsutils
	install_common

	BF=`which ddns-reportip.py`
	if [ -z "${BF}" ] || [ ! -f ${BF} ]; then
		echo "Installation failed. Aborting system integration."
		exit -1
	fi

	add_cron $BF
	add_nm $BF
	clean
}

deploy_rh () {
	exit 0
}

deploy_arch () {
	clean
	pikaur -Suy --needed python-yaml python-setuptools bind-tools
	install_common

	BF=`which ddns-reportip.py`
	if [ -z "${BF}" ] || [ ! -f ${BF} ]; then
		echo "Installation failed. Aborting system integration."
		exit -1
	fi

	add_cron $BF
	add_nm $BF
	clean
}

setup_config() {
	HOSTNAME="$1"
	DOMAIN="$2"
	SERVER="$3"
	KEY="$4"
	echo "Creating config for ${HOSTNAME}.${DOMAIN}"

	mkdir -p /etc/ddns/

	cat <<EOF >/etc/ddns/ddns.yaml
# Config for DDNS reportip.py generated by deploy.sh

---
sleep: 4
# add some time when using the script with network manager

debug: 0

bin_nsupdate: '`which nsupdate`'
bin_dig: '`which dig`'
bin_ip: '`which ip`'

nsupdate_key: '${KEY}'
dns_server: '${SERVER}'
dns_zone: '${DOMAIN}'
rr_ttl: 60

hostname: '${HOSTNAME}'
enable_ipv6: True
enable_ipv4: False
interfaces:
        - '*'
EOF
}

if (( $# != 4 )); then
	echo "$0 <hostname> <domain> <server> <nsupdate_key>"
	exit -1
fi
HOSTNAME="$1"
DOMAIN="$2"
SERVER="$3"
KEY="$4"


if [ -f /etc/debian_version ]; then
	apt-get -y install git
	cd /tmp
	git clone https://github.com/tmshlvck/ddns.git
	cd ddns
	deploy_debian
	cd
	rm -rf /tmp/ddns
	setup_config $HOSTNAME $DOMAIN $SERVER $KEY
	ddns-reportip.py -d
	exit 0
fi

if [ -f /etc/arch-release ]; then
	pacman -Suy git python-setuptools python-yaml dnsutils
	deploy_arch
	exit 0
fi

if [ -f /etc/fedora-release ]; then
	dnf -y install git
	deploy_rh
	exit 0
fi
